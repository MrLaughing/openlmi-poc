The Cura Project is based in the following Tools/libraries for 
CMPI providers development: PyWBEM and konkretcmpi.

PyWBEM is used in the testing tools of openlmi-networking and openlmi-providers
subprojects, and is strongly used in the development of openlmi-storage 
implementation.

PyWBEM
~~~~~~

This python provider interface can run under any CIMON (CIM server) that 
fully supports CMPI provider interface. So you can choose to use either 
Pegasus [1] or SFCB [2]

[1] https://collaboration.opengroup.org/pegasus/
[2] http://sourceforge.net/apps/mediawiki/sblim/index.php?title=Sfcb

konkretcmpi
~~~~~~~~~~~

Tool for rapidly developing CMPI providers in the C programming language.

Components layout
~~~~~~~~~~~~~~~~~



                 /usr/sbin/sfcbd [Cim Object Manager, WBEM service]
			(or even OpenPegasus broker)
                                     |
				     |
              --------------------------------------------
             /                                            \
             |                                            |
       CIM-clients.py                   CIM providers based on PyWbem 
(WBEM CIM-XML client using WQL)		      [openlmi-storage]
                                     CIM providres based on KonkretCMPI 
				     [openlmi-prividers, openlmi-networking]

The example folders
~~~~~~~~~~~~~~~~~~
.
├── konkretcmpi
├── pywbem
├── sblim-cim-client-java
└── sblim-client-java-samples

konretcmpi folder: This is an example of CIM Provider built using 
Konkret library.

pywbem: The next example only a CIM client using Python and PyWBEM which uses 
the CIM Provider built in the former example.

sblim-cim-client-java: This is an example using the Java library from 
SBLIM/IBM project. This example uses the CIM provider of the first example.

sblim-client-java-samples: The original samples from source distribution of
sblim java client:

sblim-cim-client2-2.2.0-src/smpl/org/sblim/cimclient/samples/*.*



--
Javi Roman <javiroman@kernel-labs.org>
